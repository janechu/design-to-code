(()=>{"use strict";(()=>{const t=Array.isArray,a="object"==typeof global&&global&&global.Object===Object&&global;var n="object"==typeof self&&self&&self.Object===Object&&self;const e=a||n||Function("return this")(),i=e.Symbol;var o=Object.prototype,r=o.hasOwnProperty,c=o.toString,d=i?i.toStringTag:void 0,s=Object.prototype.toString,u=i?i.toStringTag:void 0;const y=function(t){return null==t?void 0===t?"[object Undefined]":"[object Null]":u&&u in Object(t)?function(t){var a=r.call(t,d),n=t[d];try{t[d]=void 0;var e=!0}catch(t){}var i=c.call(t);return e&&(a?t[d]=n:delete t[d]),i}(t):function(t){return s.call(t)}(t)},l=function(t){return null!=t&&"object"==typeof t},p=function(t){return"symbol"==typeof t||l(t)&&"[object Symbol]"==y(t)};var f=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,v=/^\w*$/;const b=function(t){var a=typeof t;return null!=t&&("object"==a||"function"==a)},h=function(t){if(!b(t))return!1;var a=y(t);return"[object Function]"==a||"[object GeneratorFunction]"==a||"[object AsyncFunction]"==a||"[object Proxy]"==a},g=e["__core-js_shared__"];var I,j=(I=/[^.]+$/.exec(g&&g.keys&&g.keys.IE_PROTO||""))?"Symbol(src)_1."+I:"",D=Function.prototype.toString;const m=function(t){if(null!=t){try{return D.call(t)}catch(t){}try{return t+""}catch(t){}}return""};var _=/^\[object .+?Constructor\]$/,O=Function.prototype,L=Object.prototype,A=O.toString,k=L.hasOwnProperty,w=RegExp("^"+A.call(k).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");const x=function(t,a){var n=function(t,a){return null==t?void 0:t[a]}(t,a);return function(t){return!(!b(t)||(a=t,j&&j in a))&&(h(t)?w:_).test(m(t));var a}(n)?n:void 0},$=x(Object,"create");var N=Object.prototype.hasOwnProperty,S=Object.prototype.hasOwnProperty;function P(t){var a=-1,n=null==t?0:t.length;for(this.clear();++a<n;){var e=t[a];this.set(e[0],e[1])}}P.prototype.clear=function(){this.__data__=$?$(null):{},this.size=0},P.prototype.delete=function(t){var a=this.has(t)&&delete this.__data__[t];return this.size-=a?1:0,a},P.prototype.get=function(t){var a=this.__data__;if($){var n=a[t];return"__lodash_hash_undefined__"===n?void 0:n}return N.call(a,t)?a[t]:void 0},P.prototype.has=function(t){var a=this.__data__;return $?void 0!==a[t]:S.call(a,t)},P.prototype.set=function(t,a){var n=this.__data__;return this.size+=this.has(t)?0:1,n[t]=$&&void 0===a?"__lodash_hash_undefined__":a,this};const z=P,C=function(t,a){return t===a||t!=t&&a!=a},E=function(t,a){for(var n=t.length;n--;)if(C(t[n][0],a))return n;return-1};var T=Array.prototype.splice;function F(t){var a=-1,n=null==t?0:t.length;for(this.clear();++a<n;){var e=t[a];this.set(e[0],e[1])}}F.prototype.clear=function(){this.__data__=[],this.size=0},F.prototype.delete=function(t){var a=this.__data__,n=E(a,t);return!(n<0||(n==a.length-1?a.pop():T.call(a,n,1),--this.size,0))},F.prototype.get=function(t){var a=this.__data__,n=E(a,t);return n<0?void 0:a[n][1]},F.prototype.has=function(t){return E(this.__data__,t)>-1},F.prototype.set=function(t,a){var n=this.__data__,e=E(n,t);return e<0?(++this.size,n.push([t,a])):n[e][1]=a,this};const U=F,H=x(e,"Map"),M=function(t,a){var n,e,i=t.__data__;return("string"==(e=typeof(n=a))||"number"==e||"symbol"==e||"boolean"==e?"__proto__"!==n:null===n)?i["string"==typeof a?"string":"hash"]:i.map};function B(t){var a=-1,n=null==t?0:t.length;for(this.clear();++a<n;){var e=t[a];this.set(e[0],e[1])}}B.prototype.clear=function(){this.size=0,this.__data__={hash:new z,map:new(H||U),string:new z}},B.prototype.delete=function(t){var a=M(this,t).delete(t);return this.size-=a?1:0,a},B.prototype.get=function(t){return M(this,t).get(t)},B.prototype.has=function(t){return M(this,t).has(t)},B.prototype.set=function(t,a){var n=M(this,t),e=n.size;return n.set(t,a),this.size+=n.size==e?0:1,this};const R=B;function V(t,a){if("function"!=typeof t||null!=a&&"function"!=typeof a)throw new TypeError("Expected a function");var n=function(){var e=arguments,i=a?a.apply(this,e):e[0],o=n.cache;if(o.has(i))return o.get(i);var r=t.apply(this,e);return n.cache=o.set(i,r)||o,r};return n.cache=new(V.Cache||R),n}V.Cache=R;var W=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,q=/\\(\\)?/g;const G=(J=V((function(t){var a=[];return 46===t.charCodeAt(0)&&a.push(""),t.replace(W,(function(t,n,e,i){a.push(e?i.replace(q,"$1"):n||t)})),a}),(function(t){return 500===K.size&&K.clear(),t})),K=J.cache,J);var J,K,Q=i?i.prototype:void 0,X=Q?Q.toString:void 0;const Y=function a(n){if("string"==typeof n)return n;if(t(n))return function(t,a){for(var n=-1,e=null==t?0:t.length,i=Array(e);++n<e;)i[n]=a(t[n],n,t);return i}(n,a)+"";if(p(n))return X?X.call(n):"";var e=n+"";return"0"==e&&1/n==-1/0?"-0":e},Z=function(t){return null==t?"":Y(t)},tt=function(a,n){return t(a)?a:function(a,n){if(t(a))return!1;var e=typeof a;return!("number"!=e&&"symbol"!=e&&"boolean"!=e&&null!=a&&!p(a))||v.test(a)||!f.test(a)||null!=n&&a in Object(n)}(a,n)?[a]:G(Z(a))},at=function(t){if("string"==typeof t||p(t))return t;var a=t+"";return"0"==a&&1/t==-1/0?"-0":a},nt=function(t,a){for(var n=0,e=(a=tt(a,t)).length;null!=t&&n<e;)t=t[at(a[n++])];return n&&n==e?t:void 0},et=function(t,a,n){var e=null==t?void 0:nt(t,a);return void 0===e?n:e};function it(t){var a=this.__data__=new U(t);this.size=a.size}it.prototype.clear=function(){this.__data__=new U,this.size=0},it.prototype.delete=function(t){var a=this.__data__,n=a.delete(t);return this.size=a.size,n},it.prototype.get=function(t){return this.__data__.get(t)},it.prototype.has=function(t){return this.__data__.has(t)},it.prototype.set=function(t,a){var n=this.__data__;if(n instanceof U){var e=n.__data__;if(!H||e.length<199)return e.push([t,a]),this.size=++n.size,this;n=this.__data__=new R(e)}return n.set(t,a),this.size=n.size,this};const ot=it,rt=function(){try{var t=x(Object,"defineProperty");return t({},"",{}),t}catch(t){}}(),ct=function(t,a,n){"__proto__"==a&&rt?rt(t,a,{configurable:!0,enumerable:!0,value:n,writable:!0}):t[a]=n};var dt=Object.prototype.hasOwnProperty;const st=function(t,a,n){var e=t[a];dt.call(t,a)&&C(e,n)&&(void 0!==n||a in t)||ct(t,a,n)},ut=function(t,a,n,e){var i=!n;n||(n={});for(var o=-1,r=a.length;++o<r;){var c=a[o],d=e?e(n[c],t[c],c,n,t):void 0;void 0===d&&(d=t[c]),i?ct(n,c,d):st(n,c,d)}return n},yt=function(t){return l(t)&&"[object Arguments]"==y(t)};var lt=Object.prototype,pt=lt.hasOwnProperty,ft=lt.propertyIsEnumerable;const vt=yt(function(){return arguments}())?yt:function(t){return l(t)&&pt.call(t,"callee")&&!ft.call(t,"callee")};var bt="object"==typeof exports&&exports&&!exports.nodeType&&exports,ht=bt&&"object"==typeof module&&module&&!module.nodeType&&module,gt=ht&&ht.exports===bt?e.Buffer:void 0;const It=(gt?gt.isBuffer:void 0)||function(){return!1};var jt=/^(?:0|[1-9]\d*)$/;const Dt=function(t,a){var n=typeof t;return!!(a=null==a?9007199254740991:a)&&("number"==n||"symbol"!=n&&jt.test(t))&&t>-1&&t%1==0&&t<a},mt=function(t){return"number"==typeof t&&t>-1&&t%1==0&&t<=9007199254740991};var _t={};_t["[object Float32Array]"]=_t["[object Float64Array]"]=_t["[object Int8Array]"]=_t["[object Int16Array]"]=_t["[object Int32Array]"]=_t["[object Uint8Array]"]=_t["[object Uint8ClampedArray]"]=_t["[object Uint16Array]"]=_t["[object Uint32Array]"]=!0,_t["[object Arguments]"]=_t["[object Array]"]=_t["[object ArrayBuffer]"]=_t["[object Boolean]"]=_t["[object DataView]"]=_t["[object Date]"]=_t["[object Error]"]=_t["[object Function]"]=_t["[object Map]"]=_t["[object Number]"]=_t["[object Object]"]=_t["[object RegExp]"]=_t["[object Set]"]=_t["[object String]"]=_t["[object WeakMap]"]=!1;const Ot=function(t){return function(a){return t(a)}};var Lt="object"==typeof exports&&exports&&!exports.nodeType&&exports,At=Lt&&"object"==typeof module&&module&&!module.nodeType&&module,kt=At&&At.exports===Lt&&a.process;const wt=function(){try{return At&&At.require&&At.require("util").types||kt&&kt.binding&&kt.binding("util")}catch(t){}}();var xt=wt&&wt.isTypedArray;const $t=xt?Ot(xt):function(t){return l(t)&&mt(t.length)&&!!_t[y(t)]};var Nt=Object.prototype.hasOwnProperty;const St=function(a,n){var e=t(a),i=!e&&vt(a),o=!e&&!i&&It(a),r=!e&&!i&&!o&&$t(a),c=e||i||o||r,d=c?function(t,a){for(var n=-1,e=Array(t);++n<t;)e[n]=a(n);return e}(a.length,String):[],s=d.length;for(var u in a)!n&&!Nt.call(a,u)||c&&("length"==u||o&&("offset"==u||"parent"==u)||r&&("buffer"==u||"byteLength"==u||"byteOffset"==u)||Dt(u,s))||d.push(u);return d};var Pt=Object.prototype;const zt=function(t){var a=t&&t.constructor;return t===("function"==typeof a&&a.prototype||Pt)},Ct=function(t,a){return function(n){return t(a(n))}},Et=Ct(Object.keys,Object);var Tt=Object.prototype.hasOwnProperty;const Ft=function(t){return null!=t&&mt(t.length)&&!h(t)},Ut=function(t){return Ft(t)?St(t):function(t){if(!zt(t))return Et(t);var a=[];for(var n in Object(t))Tt.call(t,n)&&"constructor"!=n&&a.push(n);return a}(t)};var Ht=Object.prototype.hasOwnProperty;const Mt=function(t){return Ft(t)?St(t,!0):function(t){if(!b(t))return function(t){var a=[];if(null!=t)for(var n in Object(t))a.push(n);return a}(t);var a=zt(t),n=[];for(var e in t)("constructor"!=e||!a&&Ht.call(t,e))&&n.push(e);return n}(t)};var Bt="object"==typeof exports&&exports&&!exports.nodeType&&exports,Rt=Bt&&"object"==typeof module&&module&&!module.nodeType&&module,Vt=Rt&&Rt.exports===Bt?e.Buffer:void 0,Wt=Vt?Vt.allocUnsafe:void 0;const qt=function(){return[]};var Gt=Object.prototype.propertyIsEnumerable,Jt=Object.getOwnPropertySymbols;const Kt=Jt?function(t){return null==t?[]:(t=Object(t),function(t,a){for(var n=-1,e=null==t?0:t.length,i=0,o=[];++n<e;){var r=t[n];a(r)&&(o[i++]=r)}return o}(Jt(t),(function(a){return Gt.call(t,a)})))}:qt,Qt=function(t,a){for(var n=-1,e=a.length,i=t.length;++n<e;)t[i+n]=a[n];return t},Xt=Ct(Object.getPrototypeOf,Object),Yt=Object.getOwnPropertySymbols?function(t){for(var a=[];t;)Qt(a,Kt(t)),t=Xt(t);return a}:qt,Zt=function(a,n,e){var i=n(a);return t(a)?i:Qt(i,e(a))},ta=function(t){return Zt(t,Ut,Kt)},aa=function(t){return Zt(t,Mt,Yt)},na=x(e,"DataView"),ea=x(e,"Promise"),ia=x(e,"Set"),oa=x(e,"WeakMap");var ra="[object Map]",ca="[object Promise]",da="[object Set]",sa="[object WeakMap]",ua="[object DataView]",ya=m(na),la=m(H),pa=m(ea),fa=m(ia),va=m(oa),ba=y;(na&&ba(new na(new ArrayBuffer(1)))!=ua||H&&ba(new H)!=ra||ea&&ba(ea.resolve())!=ca||ia&&ba(new ia)!=da||oa&&ba(new oa)!=sa)&&(ba=function(t){var a=y(t),n="[object Object]"==a?t.constructor:void 0,e=n?m(n):"";if(e)switch(e){case ya:return ua;case la:return ra;case pa:return ca;case fa:return da;case va:return sa}return a});const ha=ba;var ga=Object.prototype.hasOwnProperty;const Ia=e.Uint8Array,ja=function(t){var a=new t.constructor(t.byteLength);return new Ia(a).set(new Ia(t)),a};var Da=/\w*$/,ma=i?i.prototype:void 0,_a=ma?ma.valueOf:void 0,Oa=Object.create;const La=function(){function t(){}return function(a){if(!b(a))return{};if(Oa)return Oa(a);t.prototype=a;var n=new t;return t.prototype=void 0,n}}();var Aa=wt&&wt.isMap;const ka=Aa?Ot(Aa):function(t){return l(t)&&"[object Map]"==ha(t)};var wa=wt&&wt.isSet;const xa=wa?Ot(wa):function(t){return l(t)&&"[object Set]"==ha(t)};var $a="[object Arguments]",Na="[object Function]",Sa="[object Object]",Pa={};Pa[$a]=Pa["[object Array]"]=Pa["[object ArrayBuffer]"]=Pa["[object DataView]"]=Pa["[object Boolean]"]=Pa["[object Date]"]=Pa["[object Float32Array]"]=Pa["[object Float64Array]"]=Pa["[object Int8Array]"]=Pa["[object Int16Array]"]=Pa["[object Int32Array]"]=Pa["[object Map]"]=Pa["[object Number]"]=Pa[Sa]=Pa["[object RegExp]"]=Pa["[object Set]"]=Pa["[object String]"]=Pa["[object Symbol]"]=Pa["[object Uint8Array]"]=Pa["[object Uint8ClampedArray]"]=Pa["[object Uint16Array]"]=Pa["[object Uint32Array]"]=!0,Pa["[object Error]"]=Pa[Na]=Pa["[object WeakMap]"]=!1;const za=function a(n,e,i,o,r,c){var d,s=1&e,u=2&e,y=4&e;if(i&&(d=r?i(n,o,r,c):i(n)),void 0!==d)return d;if(!b(n))return n;var l=t(n);if(l){if(d=function(t){var a=t.length,n=new t.constructor(a);return a&&"string"==typeof t[0]&&ga.call(t,"index")&&(n.index=t.index,n.input=t.input),n}(n),!s)return function(t,a){var n=-1,e=t.length;for(a||(a=Array(e));++n<e;)a[n]=t[n];return a}(n,d)}else{var p=ha(n),f=p==Na||"[object GeneratorFunction]"==p;if(It(n))return function(t,a){if(a)return t.slice();var n=t.length,e=Wt?Wt(n):new t.constructor(n);return t.copy(e),e}(n,s);if(p==Sa||p==$a||f&&!r){if(d=u||f?{}:function(t){return"function"!=typeof t.constructor||zt(t)?{}:La(Xt(t))}(n),!s)return u?function(t,a){return ut(t,Yt(t),a)}(n,function(t,a){return t&&ut(a,Mt(a),t)}(d,n)):function(t,a){return ut(t,Kt(t),a)}(n,function(t,a){return t&&ut(a,Ut(a),t)}(d,n))}else{if(!Pa[p])return r?n:{};d=function(t,a,n){var e,i=t.constructor;switch(a){case"[object ArrayBuffer]":return ja(t);case"[object Boolean]":case"[object Date]":return new i(+t);case"[object DataView]":return function(t,a){var n=a?ja(t.buffer):t.buffer;return new t.constructor(n,t.byteOffset,t.byteLength)}(t,n);case"[object Float32Array]":case"[object Float64Array]":case"[object Int8Array]":case"[object Int16Array]":case"[object Int32Array]":case"[object Uint8Array]":case"[object Uint8ClampedArray]":case"[object Uint16Array]":case"[object Uint32Array]":return function(t,a){var n=a?ja(t.buffer):t.buffer;return new t.constructor(n,t.byteOffset,t.length)}(t,n);case"[object Map]":case"[object Set]":return new i;case"[object Number]":case"[object String]":return new i(t);case"[object RegExp]":return function(t){var a=new t.constructor(t.source,Da.exec(t));return a.lastIndex=t.lastIndex,a}(t);case"[object Symbol]":return e=t,_a?Object(_a.call(e)):{}}}(n,p,s)}}c||(c=new ot);var v=c.get(n);if(v)return v;c.set(n,d),xa(n)?n.forEach((function(t){d.add(a(t,e,i,t,n,c))})):ka(n)&&n.forEach((function(t,o){d.set(o,a(t,e,i,o,n,c))}));var h=l?void 0:(y?u?aa:ta:u?Mt:Ut)(n);return function(t,a){for(var n=-1,e=null==t?0:t.length;++n<e&&!1!==a(t[n],n););}(h||n,(function(t,o){h&&(t=n[o=t]),st(d,o,a(t,e,i,o,n,c))})),d},Ca=function(t){return za(t,5)},Ea=function(t,a,n){return null==t?t:function(t,a,n,e){if(!b(t))return t;for(var i=-1,o=(a=tt(a,t)).length,r=o-1,c=t;null!=c&&++i<o;){var d=at(a[i]),s=n;if("__proto__"===d||"constructor"===d||"prototype"===d)return t;if(i!=r){var u=c[d];void 0===(s=void 0)&&(s=b(u)?u:Dt(a[i+1])?[]:{})}st(c,d,s),c=c[d]}return t}(t,a,n)};var Ta=0;const Fa=/\[(\d+)\]/g,Ua=/^(\.)/;function Ha(t){return t.replace(Fa,".$1").replace(Ua,"")}const Ma="items";var Ba,Ra,Va,Wa,qa;function Ga(t,a){const n=Ha(t).split(".");return a(parseInt(n[n.length-1],10)),n.slice(0,n.length-1).join(".")}function Ja(t,a,n){const e=t;return n[1]!==t&&a.includes(t)?Ja(n[0][t].parent.id,a,n):e}!function(t){t.number="number",t.string="string",t.boolean="boolean",t.array="array",t.null="null",t.object="object",t.unknown="unknown"}(Ba||(Ba={})),function(t){t.properties="properties",t.additionalProperties="additionalProperties"}(Ra||(Ra={})),function(t){t.anyOf="anyOf",t.oneOf="oneOf",t.allOf="allOf"}(Va||(Va={})),function(t){t.minItems="minItems",t.maxItems="maxItems"}(Wa||(Wa={})),function(t){t.mapsToSlot="mapsToSlot",t.mapsToTagName="mapsToTagName",t.mapsToAttribute="mapsToAttribute"}(qa||(qa={}));let Ka=0;function Qa(t,a,n,e){return e.map((e=>function(t,a,n,e,i){const o=t[Ka];Ka++;const r=[{},o],c=Array.isArray(e.linkedData)?Qa(t,o,n,e.linkedData):null,d=e.data;return null!==c&&c.forEach((t=>{const a=d[t[0][t[1]].parent.dataLocation]||[];d[t[0][t[1]].parent.dataLocation]=a.concat([{id:t[1]}]),r[0]=Object.assign(Object.assign({},r[0]),t[0])})),r[0][o]={schemaId:e.schemaId,data:d,parent:{id:a,dataLocation:e.dataLocation||n}},r}(t,a,n,e)))}function Xa(t,a){let n=[];return Object.entries(t[0]).forEach((([e,i])=>{et(i,"parent.id")===a&&(n.push(e),n=n.concat(Xa(t,e)))})),n}var Ya,Za,tn,an,nn,en,on;function rn(t,a,n,e,i,o="",r="",c=null,d){const s=d||o,u=function(t,a,n,e,i,o,r){const c=t[Va.oneOf]?Va.oneOf:t[Va.anyOf]?Va.anyOf:void 0;if(c)return t[c].map(((t,d)=>{const s=""===i,u=s?`${c}[${d}]`:`${i}.${c}[${d}]`,y=`${e}{${i}${s?"":"."}${c}[${d}]}`;return rn(t,a||!!t.disabled,r,n,void 0,e,u,o,y)}));switch(t.type){case Ba.object:if(t.properties)return Object.keys(t.properties).map((c=>rn(t.properties[c],a||!!t.properties[c].disabled,r,et(n,c)?n[c]:void 0,void 0,e?`${e}.${c}`:c,i?`${i}.${Ra.properties}.${c}`:`${Ra.properties}.${c}`,o)));case Ba.array:if(t.items&&Array.isArray(n))return n.map(((c,d)=>rn(t.items,a||!!t.items.disabled,r,n[d],void 0,`${e}[${d}]`,i?`${i}.${Ma}`:`${Ma}`,o)))}return[]}(t,a,e,o,r,s,n),y="string"==typeof n?et(e,n,t.title):t.title;return[Object.assign({[s]:{self:s,parent:c,parentDictionaryItem:void 0!==i?{id:i.id,dataLocation:i.dataLocation}:void 0,relativeDataLocation:o,schemaLocation:r,schema:t,disabled:a,data:e,text:y,type:t.type||Ba.unknown,items:u.map((t=>t[1]))}},u.reduce(((t,a)=>Object.assign(Object.assign({},t),a[0])),{})),s]}function cn(t,a,n,e){return rn(t,!!t.disabled,e,a,n)}function dn(t,a,n){const e=[];return Object.keys(a[0]).forEach((i=>{e.push([{[i]:cn(t[a[0][i].schemaId],a[0][i].data,a[0][i].parent,n)},i])})),[e.reduce(((t,a)=>(t[a[1]]=a[0][a[1]],t)),{}),a[1]]}!function(t){t.custom="custom",t.data="data",t.error="error",t.history="history",t.navigation="navigation",t.initialize="initialize",t.validation="validation",t.schemaDictionary="schema-dictionary"}(Ya||(Ya={})),function(t){t.update="update",t.remove="remove",t.add="add",t.duplicate="duplicate",t.removeLinkedData="remove-linked-data",t.addLinkedData="add-linked-data",t.reorderLinkedData="reorder-linked-data"}(Za||(Za={})),function(t){t.update="update",t.get="get"}(tn||(tn={})),function(t){t.update="update",t.get="get"}(an||(an={})),function(t){t.get="get",t.previous="previous",t.next="next"}(nn||(nn={})),function(t){t.add="add"}(en||(en={})),function(t){t.activeDictionaryId="active-dictionary-id",t.activeDictionaryIdParent="active-dictionary-id-parent",t.suppliedDictionaryId="supplied-dictionary-id"}(on||(on={}));const sn="data-design-to-code-name",un={items:[],limit:30};let yn,ln,pn,fn,vn,bn=0;const hn={};function gn(t,a){switch(t.action){case an.update:return hn[t.dictionaryId]=t.validationErrors,{type:Ya.validation,action:an.update,activeDictionaryId:fn,dictionaryId:t.dictionaryId,dataDictionary:yn,navigationDictionary:ln,activeHistoryIndex:bn,activeNavigationConfigId:pn,schemaDictionary:vn,historyId:a,validation:hn,validationErrors:t.validationErrors,options:t.options};case an.get:return{type:Ya.validation,action:an.get,activeDictionaryId:t.dictionaryId,dictionaryId:t.dictionaryId,dataDictionary:yn,navigationDictionary:ln,activeHistoryIndex:bn,activeNavigationConfigId:pn,schemaDictionary:vn,historyId:a,validation:hn,validationErrors:hn[t.dictionaryId],options:t.options};default:return null}}function In(t,a){return t.action===en.add?(vn=t.schemas.reduce(((t,a)=>Object.assign(Object.assign({},t),{[a.$id]:a})),vn),{type:Ya.schemaDictionary,action:en.add,dataDictionary:yn,navigationDictionary:ln,activeHistoryIndex:bn,activeNavigationConfigId:pn,schemaDictionary:vn,historyId:a,activeDictionaryId:fn,dictionaryId:fn,validation:hn}):null}function jn(t,a,n){switch(t.action){case Za.duplicate:return yn[0][fn].data=function(t,a){const n=Ca(a),e=Ha(t);return function(t,a){const n=Ha(a).split("."),e=n.slice(0,-1).join(".");return!isNaN(parseInt(n[n.length-1],10))&&Array.isArray(et(t,e))}(n,e)?function(t,a){const n=et(t,a),e=a.split("."),i=e.slice(0,-1).join("."),o=et(t,i);let r=0;r=parseInt(e[e.length-1],10),o.splice(r+1,0,Ca(n)),Ea(t,i,o)}(n,e):function(t,a){const n=et(t,a);Ea(t,a,[n,n])}(n,e),n}(t.sourceDataLocation,yn[0][fn].data),ln=dn(vn,yn,sn),{type:Ya.data,action:Za.duplicate,sourceDataLocation:t.sourceDataLocation,data:yn[0][fn].data,navigation:ln[0][fn],dataDictionary:yn,navigationDictionary:ln,activeHistoryIndex:bn,activeNavigationConfigId:pn,schemaDictionary:vn,historyId:n,activeDictionaryId:fn,dictionaryId:fn,validation:hn,options:t.options};case Za.remove:{const a="string"==typeof t.dictionaryId?t.dictionaryId:fn;return yn[0][a].data=function(t){let a=Ca(t.data);const n=function(t,a){let n;const e=Ga(t,(t=>{n=t}));return function(t,a,n){return isNaN(n)&&""===t?Array.isArray(a):Array.isArray(et(a,t))}(e,a,n)?function(t,a){return{dataLocationOfArray:t,isArray:!0,index:a}}(e,n):function(t){return{dataLocationOfObject:t,isArray:!1}}(t)}(t.sourceDataLocation,t.data);if(n.isArray){const t=et(a,n.dataLocationOfArray);t.splice(n.index,1),Ea(a,n.dataLocationOfArray,t)}else""===t.sourceDataLocation?a=void 0:function(t,a){null==t||function(t,a){return null==(t=function(t,a){return a.length<2?t:nt(t,function(t,a,n){var e=-1,i=t.length;a<0&&(a=-a>i?0:i+a),(n=n>i?i:n)<0&&(n+=i),i=a>n?0:n-a>>>0,a>>>=0;for(var o=Array(i);++e<i;)o[e]=t[e+a];return o}(a,0,-1))}(t,a=tt(a,t)))||delete t[at((n=a,e=null==n?0:n.length,e?n[e-1]:void 0))];var n,e}(t,a)}(a,t.sourceDataLocation);return a}({sourceDataLocation:t.dataLocation,data:yn[0][a].data}),ln=dn(vn,yn,sn),{type:Ya.data,action:Za.remove,data:yn[0][a].data,navigation:ln[0][a],dataDictionary:yn,navigationDictionary:ln,activeHistoryIndex:bn,activeNavigationConfigId:pn,schemaDictionary:vn,historyId:n,activeDictionaryId:fn,dictionaryId:fn,validation:hn,options:t.options}}case Za.add:return yn[0][fn].data=function(t){const a=Ca(t.data);return t.targetDataType===Ba.array?function(t){let a;const n=Ga(t.targetDataLocation,(t=>{a=t})),e=""===n;let i=e?t.data:et(t.data,n);return void 0===i?i=[t.sourceData]:i.splice(a,0,t.sourceData),e?i:(Ea(t.data,n,i),t.data)}(Object.assign(Object.assign({},t),{data:a})):function(t){return Ea(t.data,t.targetDataLocation,t.sourceData),t.data}(t)}({targetDataLocation:t.dataLocation,targetDataType:t.dataType,sourceData:t.data,data:yn[0][fn].data}),ln=dn(vn,yn,sn),{type:Ya.data,action:Za.add,data:yn[0][fn].data,navigation:ln[0][fn],dataDictionary:yn,navigationDictionary:ln,activeHistoryIndex:bn,activeNavigationConfigId:pn,schemaDictionary:vn,historyId:n,activeDictionaryId:fn,dictionaryId:fn,validation:hn,options:t.options};case Za.update:{const a=void 0!==t.dictionaryId?t.dictionaryId:fn;return""===t.dataLocation?yn[0][a].data=t.data:Ea(yn[0][a].data,t.dataLocation,t.data),ln=dn(vn,yn,sn),{type:Ya.data,action:Za.update,data:yn[0][a].data,navigation:ln[0][a],dataDictionary:yn,navigationDictionary:ln,activeHistoryIndex:bn,activeNavigationConfigId:pn,schemaDictionary:vn,historyId:n,activeDictionaryId:fn,dictionaryId:a,validation:hn,options:t.options}}case Za.addLinkedData:{const i="string"==typeof t.dictionaryId?t.dictionaryId:fn,o=(e={linkedData:t.linkedData,linkedDataIds:a,dictionaryId:i,dataLocation:t.dataLocation},Ka=0,{dataDictionary:Qa(e.linkedDataIds,e.dictionaryId,e.dataLocation,e.linkedData)[0],dictionaryId:e.dictionaryId});let r=et(yn[0][i].data,t.dataLocation);return Array.isArray(r)?"number"==typeof t.index?r.splice(t.index,0,{id:o.dataDictionary[1]}):r=r.concat([{id:o.dataDictionary[1]}]):r=[{id:o.dataDictionary[1]}],Ea(yn[0][i].data,t.dataLocation,r),yn[0]=Object.assign(Object.assign({},yn[0]),o.dataDictionary[0]),ln=dn(vn,yn,sn),{type:Ya.data,action:Za.addLinkedData,dictionaryId:i,linkedDataIds:Object.keys(o.dataDictionary[0]).map((t=>({id:t}))),data:yn[0][i].data,navigation:ln[0][i],dataDictionary:yn,navigationDictionary:ln,activeHistoryIndex:bn,activeNavigationConfigId:pn,schemaDictionary:vn,historyId:n,activeDictionaryId:fn,validation:hn,options:t.options}}case Za.removeLinkedData:{const a=t.dictionaryId?on.suppliedDictionaryId:Array.isArray(t.linkedData)?on.activeDictionaryId:fn!==yn[1]?on.activeDictionaryIdParent:null,e=[];let i,o,r;switch(a){case on.suppliedDictionaryId:i=t.dictionaryId,o=t.linkedData,r=t.dataLocation;break;case on.activeDictionaryId:i=fn,o=t.linkedData,r=t.dataLocation;break;case on.activeDictionaryIdParent:i=yn[0][fn].parent.id,o=[{id:fn}],r=yn[0][fn].parent.dataLocation;break;case null:return{type:Ya.error,message:"An attempt was made to remove the root dictionary item."}}const c=yn[0][i].data;o.forEach((t=>{e.push(t.id),Xa(yn,t.id).forEach((t=>{e.push(t)}))})),fn=Ja(fn,e,yn),e.forEach((t=>{delete yn[0][t]}));let d=et(yn[0][i].data,r,[]);return d=d.filter((t=>-1===o.findIndex((a=>a.id===t.id)))),Ea(yn[0][i].data,r,d),ln=dn(vn,yn,sn),{type:Ya.data,action:Za.removeLinkedData,data:c,navigation:ln[0][fn],linkedDataIds:e,dataDictionary:yn,navigationDictionary:ln,activeHistoryIndex:bn,activeNavigationConfigId:pn,schemaDictionary:vn,historyId:n,activeDictionaryId:fn,dictionaryId:fn,validation:hn,options:t.options}}case Za.reorderLinkedData:return Ea(yn[0][fn].data,t.dataLocation,t.linkedData),ln=dn(vn,yn,sn),{type:Ya.data,action:Za.reorderLinkedData,data:yn[0][fn].data,navigation:ln[0][fn],dataDictionary:yn,navigationDictionary:ln,activeHistoryIndex:bn,activeNavigationConfigId:pn,schemaDictionary:vn,historyId:n,activeDictionaryId:fn,dictionaryId:fn,validation:hn,options:t.options};default:return null}var e}function Dn(t,a){switch(t.action){case tn.update:return fn=t.activeDictionaryId,pn=t.activeNavigationConfigId,{type:Ya.navigation,action:tn.update,activeDictionaryId:t.activeDictionaryId,activeNavigationConfigId:t.activeNavigationConfigId,dataDictionary:yn,navigationDictionary:ln,activeHistoryIndex:bn,schemaDictionary:vn,historyId:a,dictionaryId:fn,validation:hn,options:t.options};case tn.get:return{type:Ya.navigation,action:tn.get,navigation:ln[0][fn],dataDictionary:yn,navigationDictionary:ln,activeHistoryIndex:bn,activeNavigationConfigId:pn,schemaDictionary:vn,historyId:a,activeDictionaryId:fn,dictionaryId:fn,validation:hn,options:t.options};default:return null}}function mn(t,a,n,e){if(null!==a&&void 0===e){un.items.length===bn||un.items.splice(bn+1),un.items.push({next:t,previous:a,id:n});let e=un.items.length;e>un.limit&&(un.items.shift(),e=un.limit),bn=e-1}}function _n(t,a){a.map((a=>{var n;Array.isArray(a.linkedData)&&_n(t,a.linkedData),t.push((n=++Ta,Z("fast")+n))}))}function On(t,a){var n,e;const i=t[1];switch(t[0].type){case Ya.custom:return[[t[0],t[1]]];case Ya.data:{let n=[];return t[0].action===Za.addLinkedData&&(t[0].originalLinkedDataIds?n=t[0].originalLinkedDataIds.map((t=>t.id)):_n(n,t[0].linkedData)),mn(t[0],function(t,a){switch(t.action){case Za.duplicate:{const a=Ha(t.sourceDataLocation).split(".");let n=0;const e=parseInt(a[a.length-1],10);return isNaN(e)||(n=e),[{type:Ya.data,action:Za.remove,dataLocation:`${t.sourceDataLocation}[${n}]`}]}case Za.remove:{const a=""===t.dataLocation?yn[0][fn].data:et(yn[0][fn].data,t.dataLocation),n=typeof a;return[{type:Ya.data,action:Za.add,dataLocation:t.dataLocation,data:et(yn[0][fn].data,t.dataLocation),dataType:null===a?Ba.null:Array.isArray(a)?Ba.array:"string"===n?Ba.string:"number"===n?Ba.number:"object"===n?Ba.object:"boolean"===n?Ba.boolean:Ba.unknown}]}case Za.add:return[{type:Ya.data,action:Za.remove,dataLocation:t.dataLocation}];case Za.update:{const a="string"==typeof t.dictionaryId?t.dictionaryId:fn,n=""===t.dataLocation?yn[0][a].data:Ca(et(yn[0][a].data,t.dataLocation));return void 0===n?[{type:Ya.data,action:Za.remove,dictionaryId:a,dataLocation:t.dataLocation}]:[{type:Ya.data,action:Za.update,dictionaryId:a,dataLocation:t.dataLocation,data:n}]}case Za.addLinkedData:{const n="string"==typeof t.dictionaryId?t.dictionaryId:fn;return[{type:Ya.data,action:Za.removeLinkedData,dictionaryId:n,dataLocation:t.dataLocation,linkedData:a.map((t=>({id:t})))}]}case Za.removeLinkedData:{let a,n,e;switch(t.dictionaryId?on.suppliedDictionaryId:Array.isArray(t.linkedData)?on.activeDictionaryId:fn!==yn[1]?on.activeDictionaryIdParent:null){case on.suppliedDictionaryId:a=t.dictionaryId,n=t.linkedData,e=t.dataLocation;break;case on.activeDictionaryId:a=fn,n=t.linkedData,e=t.dataLocation;break;case on.activeDictionaryIdParent:a=yn[0][fn].parent.id,n=[{id:fn}],e=yn[0][fn].parent.dataLocation;break;case null:return null}const i=n.map((t=>yn[0][t.id]));return[{type:Ya.data,action:Za.addLinkedData,dictionaryId:a,dataLocation:e,linkedData:Ca(i),originalLinkedDataIds:n},{type:Ya.navigation,action:tn.update,activeDictionaryId:fn,activeNavigationConfigId:pn}]}case Za.reorderLinkedData:{const a=et(yn[0][fn].data,t.dataLocation);return[{type:Ya.data,action:Za.reorderLinkedData,dataLocation:t.dataLocation,linkedData:Ca(a)}]}default:return null}}(t[0],n),i,a),[[jn(t[0],n,i),t[1]]]}case Ya.navigation:return mn(t[0],function(t){return t.action===tn.update?[{type:Ya.navigation,action:tn.update,activeDictionaryId:fn,activeNavigationConfigId:pn,options:t.options}]:null}(t[0]),i,a),[[Dn(t[0],i),t[1]]];case Ya.validation:return[[gn(t[0],i),t[1]]];case Ya.history:{const a=function(t,a){switch(t.action){case nn.get:return[{type:Ya.history,action:nn.get,history:un,dataDictionary:yn,navigationDictionary:ln,activeHistoryIndex:bn,activeNavigationConfigId:pn,schemaDictionary:vn,historyId:a,activeDictionaryId:fn,dictionaryId:fn,validation:hn}];case nn.next:if(bn+1<=un.items.length-1)return bn+=1,On([un.items[bn].next,a],bn).map((t=>t[0]));break;case nn.previous:if(0!==bn)return bn-=1,un.items[bn+1].previous.map((t=>On([t,a],bn).map((t=>t[0])))).flat();break;default:return null}}(t[0],(null===(e=null===(n=un.items)||void 0===n?void 0:n[un.items.length-1])||void 0===e?void 0:e.id)||void 0);if(a)return a.map((a=>[a,t[1]]))}case Ya.schemaDictionary:return[[In(t[0],i),t[1]]];case Ya.initialize:return yn=Array.isArray(t[0].dataDictionary)?t[0].dataDictionary:t[0].data,fn="string"==typeof t[0].dictionaryId?t[0].dictionaryId:yn[1],vn=t[0].schemaDictionary,ln=dn(vn,yn,sn),pn=ln[0][ln[1]][1],un.limit=t[0].historyLimit||30,[[{type:Ya.initialize,data:yn[0][fn].data,navigation:ln[0][fn],schema:vn[yn[0][fn].schemaId],historyLimit:un.limit,dataDictionary:yn,navigationDictionary:ln,activeHistoryIndex:bn,activeNavigationConfigId:pn,schemaDictionary:vn,historyId:i,activeDictionaryId:fn,dictionaryId:fn,validation:hn,options:t[0].options},t[1]]]}}onmessage=function(t){var a,n;(null===(n=null===(a=t.data)||void 0===a?void 0:a[0])||void 0===n?void 0:n.type)&&postMessage(On(t.data))}})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,